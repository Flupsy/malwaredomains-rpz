#!/bin/bash
#
# Build our RPZ by merging our special things with malwaredomains.com
#
# Ian Chard  <ian@chard.org>
# Github repo:  https://github.com/Flupsy/malwaredomains-rpz.git
# Licence:  GNU GPL v3.0
#

MY_RPZ_RECORDS='/etc/bind/db.rpz.fragment'
MY_RPZ_ZONE='/etc/bind/db.rpz.CHANGEME'
MY_RPZ_ZONE_NAME='rpz.CHANGEME'
MALWARE_URL='http://mirror1.malwaredomains.com/files/justdomains'
MALWARE_MIN_LINES=100

me=`basename $0`
tmp="/tmp/$me.$$"
tmp_out="/tmp/$me.$$.out"

if [ ! -r $MY_RPZ_RECORDS ]; then
	echo "$me: can't read $MY_RPZ_RECORDS"
	exit 1
fi

wget -O $tmp $MALWARE_URL >/dev/null 2>&1
if [ $? != 0 ]; then
	echo "$me: wget failed with exit code $?"
	rm -f $tmp
	exit $?
fi

lines=`wc -l $tmp | cut -f1 -d' '`
if [ "$lines" -lt $MALWARE_MIN_LINES ]; then
	echo "$me: malwaredomains.com returned fewer than $MALWARE_MIN_LINES ($lines)"
	rm -f $tmp
	exit 1
fi

serial_number=`date '+%Y%m%d01'`

cat <<EOF >$tmp_out
;
; Response policy zone
;
; DO NOT EDIT -- generated automatically by $0
;

\$TTL 3600
@       IN      SOA     localhost. root.localhost. (
	$serial_number         ; Serial
	604800         ; Refresh
	86400         ; Retry
	2419200         ; Expire
	604800 )       ; Negative Cache TTL
;

@       IN      NS      localhost.

;
; Records from $MY_RPZ_RECORDS
;
EOF

cat $MY_RPZ_RECORDS >> $tmp_out

cat <<EOF >>$tmp_out

;
; Records generated from $MALWARE_URL
;
EOF

while read domain
do
	echo "$domain CNAME ." >>$tmp_out
	echo "*.$domain CNAME ." >>$tmp_out
done < $tmp

/usr/sbin/named-checkzone $MY_RPZ_ZONE_NAME $tmp_out >/dev/null
if [ $? != 0 ]; then
	echo "$me: named-checkzone failed on $tmp_out (leaving in place)"
	rm -f $tmp
	exit 1
fi

mv $MY_RPZ_ZONE ${MY_RPZ_ZONE}.bak
mv $tmp_out $MY_RPZ_ZONE
/usr/sbin/service bind9 reload

rm -f $tmp $tmp_out
